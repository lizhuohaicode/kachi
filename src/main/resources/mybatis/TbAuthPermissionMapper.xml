<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.dao.auth.TbAuthPermissionDao">

	<select id="getMenuByRole" resultType="com.team.model.auth.TbAuthPermission" parameterType="com.team.model.auth.TbAuthRole">
		select distinct p.* 
		from tb_auth_permission p,
			 tb_auth_role_permission rp
		where p.id=rp.permission_id
		  and p.status=0 
		  and p.is_menu=1
		  and rp.status=0
		  and rp.role_id in(<foreach collection="list" item="item" separator=",">#{item.id,jdbcType=INTEGER}</foreach>)
		order by parent_id,order_num
	</select>
	
	<select id="getFunByRole" resultType="com.team.model.auth.TbAuthPermission" parameterType="java.util.Map">
		select distinct p.* 
		from tb_auth_permission p,
			 tb_auth_role_permission rp
		where p.id=rp.permission_id
		  and p.status=0 
		  and p.is_menu=0
		  and rp.status=0
		  and rp.role_id in(<foreach collection="list" item="item" separator=",">#{item.id,jdbcType=INTEGER}</foreach>)
		  and p.parent_id=#{parentId,jdbcType=VARCHAR}
		order by order_num
	</select>
	
	<select id="getAllPermission" resultType="com.team.model.auth.TbAuthPermission">
		select * 
		from tb_auth_permission
		where status=0 
		order by parent_id,order_num 
	</select>
	
	<select id="getPermissionByUser" resultType="java.util.Map">
		select distinct p.id
		from tb_auth_permission p,
			 tb_auth_role_permission rp,
			 tb_auth_role r,
			 tb_auth_user_role ur,
			 m_customer c
		where p.id=rp.permission_id
		  and rp.role_id=r.id
	      and r.id=ur.role_id
		  and ur.user_id=c.id
		  and p.status=0
		  and rp.status=0
		  and r.status=0
		  and ur.status=0
		  and c.status=0
		  and c.id=#{id,jdbcType=INTEGER}
	</select>
	
	<update id="updateRolePermission">
		update tb_auth_role_permission
		set status=1
		where status=0
		  and role_id in(select role_id 
		  				 from tb_auth_user_role 
		  				 where user_id=#{userId,jdbcType=INTEGER})
	</update>
	
	<insert id="insertRolePermission" parameterType="java.util.Map">
		insert into tb_auth_role_permission
		(role_id,permission_id)
		values
		<foreach collection="array" item="item" separator=",">
			(#{roleId,jdbcType=INTEGER},#{item,jdbcType=INTEGER})
		</foreach>
	</insert>
	
	<update id="updateStatus">
		update tb_auth_permission
		set status=1
		where id=#{id,jdbcType=INTEGER}
	</update>
	
	<insert id="insertPermission" parameterType="com.team.model.auth.TbAuthPermission" useGeneratedKeys="true" keyProperty="id">
		insert into tb_auth_permission
		(parent_id,text,url,icon_cls,is_menu,order_num,fun_desc,status)
		values
		(#{parentId,jdbcType=INTEGER},
		 #{text,jdbcType=VARCHAR},
		 #{url,jdbcType=VARCHAR},
		 #{iconCls,jdbcType=VARCHAR},
		 #{isMenu,jdbcType=INTEGER},
		 #{orderNum,jdbcType=INTEGER},
		 #{funDesc,jdbcType=VARCHAR},
		 0
		 )
	</insert>
	
	<update id="updatePermission" parameterType="com.team.model.auth.TbAuthPermission">
		update tb_auth_permission
		set text=#{text,jdbcType=VARCHAR},
			url=#{url,jdbcType=VARCHAR},
			icon_cls=#{iconCls,jdbcType=VARCHAR},
			order_num=#{orderNum,jdbcType=INTEGER},
			fun_desc=#{funDesc,jdbcType=VARCHAR}
		where id=#{id,jdbcType=INTEGER} 
	</update>
	
	<insert id="insertRP">
		insert into tb_auth_role_permission
		(role_id,permission_id)
		select
			  (select id from tb_auth_role where code='GROUP_ADMIN' and status=0),
			  #{permissionId,jdbcType=INTEGER}
		from dual 
	</insert>
</mapper>
